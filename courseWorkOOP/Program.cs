/*
 * 12/05/2016
 *        
 *         Николай Костадинов, УНИБИТ, ИТ1, 2259
 *  Курсова работа по "Обекто-ориентирано програмиране"
 * -----------------------------------------------------
 * 
 * Това е програма, която при зададени
 *  - нечетна големина, между 5 и 51 и
 *  - символ
 *  извежда Батман фигурата на конзолата.
 *  
 *  Ето пример долу, при въведени 5 и % като входни данни:
 * 
 *                %%%%%     %%%%%
 *                 %%%% % % %%%%
 *                  %%%%%%%%%%%
 *                  %%%%%%%%%%%
 *                      %%%
 *                       %
 */

using System;

namespace courseWorkOOP
{
    class Batman
    {
        public bool initialized = false;

        int c;
        char s;
        int body;

        // Конструкторът на класа
        public Batman(int in_c, char in_s)
        {
            // Проверка дали са в допустимите стойности
            if (in_c < 5 || in_c > 51 || in_c % 2 == 0)
                return;

            // Инизиализиране на базовите променливи в класа
            c = in_c;
            s = in_s;
            body = c / 3; // Големината на тялото на фигурата. Това определя колко пъти да повторим реда между крилата и долната част. В случая на примера горе, то е 2

            initialized = true;
        }
        public void print()
        {
            // Цикълът за извеждане на всеки отделен ред (височина)
            for (int lines = 0; lines < c; lines++)
            {
                // Цикълът, чрез който се извършва извеждането на фигурата символ по символ на всеки ред (широчина)
                for (int i = 0; i < c * 3 /* Умножено е по 3, защото широчината е по-голяма от височината */; i++)
                {
                    // Чрез тази проверка знаем кога да принтираме празен интервал и кога въведения от нас символ. По-детайлно обяснено е на всеки индивидуален ред.
                    if (
                        (i < lines || c * 3 - lines - 1 < i) || // Празното пространство преди лявото крило
                        lines > c / 2 && (i - c / 2 - 1 < lines || c * 3 - lines - c / 2 - 2 < i) || // 'Опашката' -- т.е под тялото
                        lines < c / 2 - 1 && i > c - 1 && i < c * 2 || // Празното пространство между крилата
                        lines == c / 2 - 1 && i > c - 1 && i < c * 2 && i != (c * 3) / 2 - 1 && i != (c * 3) / 2 + 1) // Рогата
                        Console.Write(" ");
                    else
                        Console.Write(s);

                    // Този ред ни позволява да повторим реда с тялото нужния брой пъти
                    if (body > 0 && lines == c / 2 + 1)
                    {
                        body--;
                        lines--;
                    }
                }

                // Нов ред, иначе бихме чакали вход на същия ред като края на фигурата
                if (lines != lines - 1)
                    Console.Write("\n");
            }
        }
    }
    class Program
    {
        static void Main(string[] args)
        {
            int c; // Големината
            char s; // Символът, с който ще се изпише

            // Въвеждане на променливите
            Int32.TryParse(Console.ReadLine(), out c);
            char.TryParse(Console.ReadLine(), out s);

            Batman fig = new Batman(c, s); // Инзиализираме нов обект

            if (fig.initialized)
                fig.print(); // Правилни данни въведени, принтираме
            else
                return; // Грешни данни въведени, излизаме от програмата

            // Чакаме клиента да натисне клавиш за да излезем от програмата
            Console.ReadKey();
        }
    }
}
